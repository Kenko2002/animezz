// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using example_db.Data;

#nullable disable

namespace exemploapi.Migrations
{
    [DbContext(typeof(MyProjectDbContext))]
    [Migration("20240429034658_match3")]
    partial class match3
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ModelExample.Models.Example", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("exemplo_paiId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("exemplo_paiId");

                    b.ToTable("Examples");
                });

            modelBuilder.Entity("exemploapi.MVC.model.Atracao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<int?>("generoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("generoId");

                    b.ToTable("Atracoes");
                });

            modelBuilder.Entity("exemploapi.MVC.model.Genero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("nome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Generos");
                });

            modelBuilder.Entity("exemploapi.MVC.model.Localizacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<float>("latitude")
                        .HasColumnType("real");

                    b.Property<float>("longitude")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("Localizacoes");
                });

            modelBuilder.Entity("exemploapi.MVC.model.Match", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Criacao")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("MatchAceito")
                        .HasColumnType("bit");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("user_requirinte_e_alvo_id")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Matches");
                });

            modelBuilder.Entity("exemploapi.MVC.model.Privilegios", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("isAdmin")
                        .HasColumnType("bit");

                    b.Property<bool>("isFree")
                        .HasColumnType("bit");

                    b.Property<bool>("isPremium")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Privilegios");
                });

            modelBuilder.Entity("exemploapi.MVC.model.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("dataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("descricaoPessoal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("generoId")
                        .HasColumnType("int");

                    b.Property<int?>("localizacaoId")
                        .HasColumnType("int");

                    b.Property<string>("nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("privilegiosId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("generoId");

                    b.HasIndex("localizacaoId");

                    b.HasIndex("privilegiosId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ModelExample.Models.Example", b =>
                {
                    b.HasOne("ModelExample.Models.Example", "exemplo_pai")
                        .WithMany()
                        .HasForeignKey("exemplo_paiId");

                    b.Navigation("exemplo_pai");
                });

            modelBuilder.Entity("exemploapi.MVC.model.Atracao", b =>
                {
                    b.HasOne("exemploapi.MVC.model.User", null)
                        .WithMany("GenerosPelosQuaisSeAtrai")
                        .HasForeignKey("UserId");

                    b.HasOne("exemploapi.MVC.model.Genero", "genero")
                        .WithMany()
                        .HasForeignKey("generoId");

                    b.Navigation("genero");
                });

            modelBuilder.Entity("exemploapi.MVC.model.Match", b =>
                {
                    b.HasOne("exemploapi.MVC.model.User", null)
                        .WithMany("matches")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("exemploapi.MVC.model.User", b =>
                {
                    b.HasOne("exemploapi.MVC.model.Genero", "genero")
                        .WithMany()
                        .HasForeignKey("generoId");

                    b.HasOne("exemploapi.MVC.model.Localizacao", "localizacao")
                        .WithMany()
                        .HasForeignKey("localizacaoId");

                    b.HasOne("exemploapi.MVC.model.Privilegios", "privilegios")
                        .WithMany()
                        .HasForeignKey("privilegiosId");

                    b.Navigation("genero");

                    b.Navigation("localizacao");

                    b.Navigation("privilegios");
                });

            modelBuilder.Entity("exemploapi.MVC.model.User", b =>
                {
                    b.Navigation("GenerosPelosQuaisSeAtrai");

                    b.Navigation("matches");
                });
#pragma warning restore 612, 618
        }
    }
}
